#GKE Private Cluster
====================================================================================================
#Set Local Varaibles
====================
BASEFOLDERPATH=""
OWNER=
PROJECT_ID=
GSA_DISPLAY_NAME=
GSA=$GSA_DISPLAY_NAME@$PROJECT_ID.iam.gserviceaccount.com
VPC_NAME=
CLUSTER_SUBNET_NAME=
PROXY_SUBNET_NAME=
PSC_SUBNET_NAME=
JUMP_SERVER_SUBNET_NAME=
CLUSTER=
NODEPOOL=
REGION=asia-southeast1
ZONE=asia-southeast1-a
IP_ADDRESS_NAME=
CERTIFICATE_NAME=
DOMAIN1_NAME=
DOMAIN2_NAME=
DOMAIN_LIST=$DOMAIN1_NAME,$DOMAIN2_NAME
DNS_ZONE=
AR_REPO=
JUMP_SERVER_NAME=
JUMPSERVER_IP=$(gcloud compute addresses describe gke-jump-server-ip --format="get(address)")
JUMPSERVER_PRIVATE_IP=$(gcloud compute addresses describe gke-jump-server-private-ip --format="get(address)")


gcloud auth list
gcloud config set account $OWNER
gcloud services enable cloudresourcemanager.googleapis.com

gcloud config set project $PROJECT_ID
gcloud config set compute/region $REGION
gcloud config set compute/zone $ZONE

gcloud iam service-accounts create $GSA_DISPLAY_NAME --display-name=$GSA_DISPLAY_NAME
gcloud iam service-accounts list
gcloud iam service-accounts keys create $BASEFOLDERPATH/Misc/apps-project-sa.json --iam-account=$GSA
gcloud projects add-iam-policy-binding $PROJECT_ID --member=serviceAccount:$GSA --role=roles/owner

gcloud auth activate-service-account $GSA --key-file=$BASEFOLDERPATH/Misc/apps-project-sa.json
#gcloud config set account $GSA
gcloud auth list

Network
===========
gcloud compute networks create spoke-vpc --subnet-mode=custom --bgp-routing-mode=regional --mtu=1460
#gcloud compute networks delete spoke-vpc

gcloud compute networks subnets create spoke-gke-subnet --network=spoke-vpc --range=10.0.0.0/24 --region=$REGION
#gcloud compute networks subnets delete spoke-gke-subnet --region=$REGION

gcloud compute networks subnets create spoke-proxy-subnet --purpose=REGIONAL_MANAGED_PROXY --role=ACTIVE \
--network=spoke-vpc --range=10.0.2.0/24
#gcloud compute networks subnets delete spoke-proxy-subnet

gcloud compute networks subnets create spoke-psc-subnet	--purpose=PRIVATE_SERVICE_CONNECT --role=ACTIVE \
--network=spoke-vpc --range=10.0.1.0/24
#gcloud compute networks subnets delete spoke-psc-subnet

gcloud compute networks subnets update spoke-gke-subnet \
--add-secondary-ranges=pods-range=10.2.0.0/16,services-range=10.3.0.0/16
#gcloud compute networks subnets delete spoke-gke-subnet

gcloud compute firewall-rules create allow-egress --allow --destination-ranges=0.0.0.0/0 --direction=EGRESS --network=spoke-vpc
gcloud compute firewall-rules create allow-http-ingress --allow=tcp:80,tcp:443 --source-ranges=0.0.0.0/0 --direction=INGRESS --network=spoke-vpc
gcloud compute firewall-rules create allow-ssh --allow=tcp:22 --source-ranges=0.0.0.0/0 --direction=INGRESS --network=spoke-vpc

gcloud compute firewall-rules create allow-spoke-health-check --network=spoke-vpc \
--action=allow --direction=ingress --source-ranges=130.211.0.0/22,35.191.0.0/16 --rules=tcp
#gcloud compute firewall-rules delete allow-spoke-health-check

gcloud compute firewall-rules create allow-spoke-proxies --network=spoke-vpc \
--action=allow --direction=ingress --source-ranges=10.0.2.0/24 --rules=tcp:80,tcp:443,tcp:8080
#gcloud compute firewall-rules delete allow-spoke-proxies

gcloud compute firewall-rules create allow-asm-egress --network=spoke-vpc \
--action=allow --direction=egress --source-ranges=10.0.2.0/24 --rules=tcp:80,tcp:443,tcp:8080,tcp:10250,tcp:15017,tcp:15014
#gcloud compute firewall-rules delete allow-asm-egress

gcloud compute firewall-rules list --filter="name~gke-$CLUSTER-[0-9a-z]*-master"
#gcloud compute firewall-rules update FIREWALL_RULE_NAME --allow tcp:10250,tcp:443,tcp:15017,tcp:15014,tcp:8080
gcloud compute firewall-rules update gke-gke-private-cluster-066839cd-master --allow tcp:10250,tcp:443,tcp:15017,tcp:15014,tcp:8080

Artifact Registry
=====================
gcloud artifacts repositories create cloud-native-apps-repo --repository-format=docker --location=$REGION
gcloud artifacts repositories describe cloud-native-apps-repo --location=$REGION
#gcloud artifacts repositories delete cloud-native-apps-repo --location=$REGION

#asia-southeast1-docker.pkg.dev/apps-project-3108449/cloud-native-apps-repo
gcloud auth configure-docker asia-southeast1-docker.pkg.dev

gcloud auth configure-docker

GKE Private cluster
================================================================================================
gcloud auth activate-service-account $GSA --key-file="${BASEFOLDERPATH}/Misc/apps-project-sa.json"
gcloud auth list
gcloud config set project $PROJECT_ID
gcloud config set compute/region $REGION
gcloud config set compute/zone $ZONE

gcloud compute firewall-rules create allow-spoke-master --network=spoke-vpc \
--action=allow --direction=ingress --source-ranges=10.0.7.0/28 --rules=tcp:80,tcp:443,tcp:8443,tcp:8080
#gcloud compute firewall-rules delete allow-spoke-master

gcloud compute networks subnets create jumper-server-spoke-subnet --network=spoke-vpc --range=10.0.8.0/24
#gcloud compute networks subnets delete jumper-server-spoke-subnet

gcloud compute firewall-rules create allow-spoke-jumper --network=spoke-vpc \
--action=allow --direction=ingress --source-ranges=10.0.8.0/24 --rules=tcp:80,tcp:443,tcp:8443,tcp:8080
#gcloud compute firewall-rules delete allow-spoke-jumper

gcloud compute addresses create gke-jump-server-ip --region=$REGION
JUMPSERVER_IP=$(gcloud compute addresses describe gke-jump-server-ip --format="get(address)")

gcloud compute addresses create gke-jump-server-private-ip --subnet=jumper-server-spoke-subnet \
--addresses=10.0.8.100 --region=$REGION
JUMPSEVER_PRIVATE_IP=$(gcloud compute addresses describe gke-jump-server-private-ip --format="get(address)")
#gcloud compute addresses delete gke-jump-server-private-ip

### Jumper VM
===============
gcloud compute instances create jumper-server --image-family=debian-10 --image-project=debian-cloud \
--network=spoke-vpc --subnet=jumper-server-spoke-subnet --address=$JUMPSERVER_IP \
--private-network-ip=$JUMPSEVER_PRIVATE_IP --zone=$ZONE --project=$PROJECT_ID
#gcloud compute instances delete jumper-server --zone=asia-southeast1-b --project=$PROJECT_SPOKE

gcloud compute instances describe jumper-server --format="get(networkInterfaces[0].networkIP)" \
--project=$PROJECT_ID
gcloud compute instances describe jumper-server --format="get(networkInterfaces[0].accessConfigs[0].natIP)" \
--project=$PROJECT_ID

gcloud compute ssh --zone $ZONE jumper-server --project=$PROJECT_ID --tunnel-through-iap
==========================================================================================
gcloud container get-server-config --flatten="channels" --filter="channels.channel=REGULAR" \
    --format="yaml(channels.channel,channels.defaultVersion)"

gcloud container get-server-config --flatten="channels" --filter="channels.channel=REGULAR" \
    --format="yaml(channels.channel,channels.validVersions)"

gcloud container clusters create gke-private-cluster --release-channel=regular \
--region=$REGION --num-nodes=2 --enable-ip-alias \
--network=spoke-vpc --subnetwork=spoke-gke-subnet \
--cluster-secondary-range-name=pods-range --services-secondary-range-name=services-range \
--enable-master-authorized-networks --enable-private-nodes --enable-private-endpoint \
--service-account=$GSA --workload-pool=$PROJECT_ID.svc.id.goog \
--master-authorized-networks=$JUMPSEVER_PRIVATE_IP/32 --master-ipv4-cidr=10.0.7.0/28
#gcloud container clusters delete gke-private-cluster --region=$REGION

#gcloud container clusters update $CLUSTER --enable-autoscaling --node-pool=default-pool --min-nodes=2 --max-nodes=4 --region=$REGION

gcloud container clusters describe gke-private-cluster --region=$REGION

gcloud compute addresses create gke-nat-ip --region=$REGION
gcloud compute addresses describe gke-nat-ip --region=$REGION
#gcloud compute addresses delete gke-nat-ip --region=$REGION

gcloud compute routers create spoke-nat-rtr --network=spoke-vpc --region=$REGION
#gcloud compute routers delete spoke-nat-rtr --region=asia-southeast1

gcloud compute routers nats create spoke-nat-gw --router=spoke-nat-rtr --region=$REGION \
--nat-external-ip-pool=gke-nat-ip --nat-all-subnet-ip-ranges --enable-logging
gcloud compute routers nats describe spoke-nat-gw --router=spoke-nat-rtr
#gcloud compute routers nats delete spoke-nat-gw --router=spoke-nat-rtr --region=$REGION

scp -i ~/.ssh/google_compute_engine -r ./online-boutique/ <remote>:~/asm/
scp -i ~/.ssh/google_compute_engine -r <crt-path-local>/fullchain.pem <remote>:~/certs/
scp -i ~/.ssh/google_compute_engine -r <crt-path-local>/privkey.pem <remote>:~/certs/
================================================================================================================================
##Access from Jump Server VM
================================
gcloud compute ssh --zone=$ZONE jumper-server --project=$PROJECT_ID --tunnel-through-iap
======================
BASEFOLDERPATH="./csm"
OWNER=
PROJECT_ID=
GSA_DISPLAY_NAME=
GSA=$GSA_DISPLAY_NAME@$PROJECT_ID.iam.gserviceaccount.com
VPC_NAME=
CLUSTER_SUBNET_NAME=
PROXY_SUBNET_NAME=
PSC_SUBNET_NAME=
JUMP_SERVER_SUBNET_NAME=
CLUSTER=
NODEPOOL=
REGION=asia-southeast1
ZONE=asia-southeast1-a
IP_ADDRESS_NAME=
CERTIFICATE_NAME=
DOMAIN1_NAME=
DOMAIN2_NAME=
DOMAIN_LIST=$DOMAIN1_NAME,$DOMAIN2_NAME
DNS_ZONE=
AR_REPO=
JUMP_SERVER_NAME=
JUMPSERVER_IP=$(gcloud compute addresses describe gke-jump-server-ip --format="get(address)")
JUMPSERVER_PRIVATE_IP=$(gcloud compute addresses describe gke-jump-server-private-ip --format="get(address)")

#Create GKE Private Cluster
====================================
gcloud container clusters create $CLUSTER --release-channel=regular --region=$REGION \
--enable-ip-alias --machine-type=n2d-standard-2 \
--num-nodes=1 --max-pods-per-node=40 \
--network=$VPC_NAME --subnetwork=$CLUSTER_SUBNET_NAME \
--cluster-secondary-range-name=pods-range --services-secondary-range-name=services-range \
--service-account=$GSA --workload-pool=$PROJECT_ID.svc.id.goog \
--enable-master-authorized-networks --enable-private-nodes --enable-private-endpoint \
--master-authorized-networks=$JUMPSERVER_PRIVATE_IP/32 --master-ipv4-cidr=10.0.7.0/28 \
--addons GcsFuseCsiDriver,HttpLoadBalancing
#gcloud container clusters delete $CLUSTER --region=$REGION

gcloud container clusters get-credentials $CLUSTER --project=$PROJECT_ID --region=$REGION
==========================================================================================
#Configure CSM
=========================
gcloud container fleet mesh enable --project $PROJECT_ID
gcloud container clusters update $CLUSTER --location $REGION --fleet-project $PROJECT_ID
gcloud container fleet memberships list --project $PROJECT_ID

gcloud container fleet mesh update --management automatic \
--memberships $CLUSTER --project $PROJECT_ID --location $REGION
#gcloud container clusters update $CLUSTER --clear-fleet-project --region=$REGION

gcloud container fleet mesh describe --project $PROJECT_ID
#Wait for the State to become 'ACTIVE'

#Install Ingress and Egress Gateways
==================================================
k create namespace asm-ingress
#k delete ns asm-ingress

k label namespace asm-ingress istio-injection=enabled
#k label namespace asm-ingress istio-injection-

#Make necessaey changes in the istio-ingressgateway/service.yaml to deploy it as ILB or ClusterIP

k apply -f $BASEFOLDERPATH/istio-gateways/istio-ingressgateway -n asm-ingress
#k delete -f $BASEFOLDERPATH/istio-gateways/istio-ingressgateway -n asm-ingress

k apply -f $BASEFOLDERPATH/istio-gateways/istio-egressgateway -n asm-ingress
#k delete -f BASEFOLDERPATH/istio-gateways/istio-egressgateway -n asm-ingress

#If istio-ingressgateway is deployed as ILB then create Service Attachments and PSC NEG
====================================================================================================
gcloud compute service-attachments create gke-asm-attachment --region=$REGION \
--producer-forwarding-rule=a7cfa314cf0e348dab210e9fc0b1f763 \
--connection-preference=ACCEPT_AUTOMATIC --nat-subnets=spoke-psc-subnet
#gcloud compute service-attachments delete gke-asm-attachment

gcloud compute network-endpoint-groups create gke-asm-neg --network-endpoint-type=private-service-connect \
--psc-target-service=$(gcloud compute service-attachments describe gke-asm-attachment --region=$REGION --format="get(selfLink)") \
--network=spoke-vpc --subnet=spoke-psc-subnet --region=$REGION
#gcloud compute network-endpoint-groups delete gke-asm-neg --region=$REGION

#Create new Nodepool to host application Workloads
=====================================================
gcloud container node-pools create $NODEPOOL --cluster=$CLUSTER --region=$REGION \
--num-nodes=1 --enable-autoscaling --machine-type=n2d-standard-4 \
--min-nodes=1 --max-nodes=50 --max-pods-per-node=30 \
--service-account=$GSA
#gcloud container node-pools delete gkeappspool --cluster=$CLUSTER --region=$REGION

#Create Smoke namespace
=========================
k create ns smoke
#k delete ns smoke

k label namespace smoke istio-injection=enabled
#k label namespace smoke istio-injection-

#Deploy Test applications for sanity checks
=================================================
helm upgrade --install --create-namespace smoke-tests-chart-nginx \
$BASEFOLDERPATH/apps/smoke/smoke-tests-chart/ -n smoke \
-f $BASEFOLDERPATH/apps/smoke/smoke-tests-chart/values-nginx.yaml
#helm uninstall smoke-tests-chart-nginx -n smoke

helm upgrade --install --create-namespace smoke-tests-chart-apache \
$BASEFOLDERPATH/apps/smoke/smoke-tests-chart/ -n smoke \
-f $BASEFOLDERPATH/apps/smoke/smoke-tests-chart/values-apache.yaml
#helm uninstall smoke-tests-chart-apache -n smoke

k apply -f $BASEFOLDERPATH/manifests/smoke/smoke-gateway.yaml -n smoke
#k delete -f $BASEFOLDERPATH/manifests/smoke/smoke-gateway.yaml -n smoke

#Deploy Vertexai applications
==================================================================================================
k create ns vertexai
#k delete ns vertexai

k config set-context --current --namespace vertexai

k create serviceaccount vertexai-sa -n vertexai
#k delete serviceaccount vertexai-sa -n vertexai

gcloud iam service-accounts add-iam-policy-binding $GSA \
    --role=roles/iam.workloadIdentityUser \
    --member="serviceAccount:$PROJECT_ID.svc.id.goog[vertexai/vertexai-sa]"

#gcloud iam service-accounts remove-iam-policy-binding $GSA \
    --role=roles/iam.workloadIdentityUser \
    --member="serviceAccount:$PROJECT_ID.svc.id.goog[vertexai/vertexai-sa]"

k annotate serviceaccount vertexai-sa -n vertexai iam.gke.io/gcp-service-account=$GSA
#k annotate serviceaccount vertexai-sa -n vertexai iam.gke.io/gcp-service-account-

k label namespace vertexai istio-injection=enabled
#helm create vertexai-chart -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-storage.yaml
helm upgrade --install --create-namespace vertexai-chart-storage $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-storage.yaml
#helm uninstall vertexai-chart-storage -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-translate.yaml
helm upgrade --install --create-namespace vertexai-chart-translate $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-translate.yaml
#helm uninstall vertexai-chart-translate -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-vision.yaml
helm upgrade --install --create-namespace vertexai-chart-vision $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-vision.yaml
#helm uninstall vertexai-chart-vision -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-speech.yaml
helm upgrade --install --create-namespace vertexai-chart-speech $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-speech.yaml
#helm uninstall vertexai-chart-speech -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-genaitext.yaml
helm upgrade --install --create-namespace vertexai-chart-genaitext $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-genaitext.yaml
#helm uninstall vertexai-chart-genaitext -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-genaimultimodal.yaml
helm upgrade --install --create-namespace vertexai-chart-genaimultimodal $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-genaimultimodal.yaml
#helm uninstall vertexai-chart-genaimultimodal -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-genaiimage.yaml
helm upgrade --install --create-namespace vertexai-chart-genaiimage $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-genaiimage.yaml
#helm uninstall vertexai-chart-genaiimage -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-vectorsearch.yaml
helm upgrade --install --create-namespace vertexai-chart-vectorsearch $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-vectorsearch.yaml
#helm uninstall vertexai-chart-vectorsearch -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-discovery-engine.yaml
helm upgrade --install --create-namespace vertexai-chart-discovery-engine $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values-discovery-engine.yaml
#helm uninstall vertexai-chart-discovery-engine -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-datastore.yaml
helm upgrade --install --create-namespace vertexai-chart-datastore $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-datastore.yaml
#helm uninstall vertexai-chart-datastore -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-chatgenie.yaml
helm upgrade --install --create-namespace vertexai-chart-chatgenie $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-chatgenie.yaml
#helm uninstall vertexai-chart-chatgenie -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-codegenie.yaml
helm upgrade --install --create-namespace vertexai-chart-codegenie $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-codegenie.yaml
#helm uninstall vertexai-chart-codegenie -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-retailgenie.yaml
helm upgrade --install --create-namespace vertexai-chart-retailgenie $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-retailgenie.yaml
#helm uninstall vertexai-chart-retailgenie -n vertexai

#vi $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-docai.yaml
helm upgrade --install --create-namespace vertexai-chart-documentai $BASEFOLDERPATH/apps/vertexai/vertexai-chart/ -n vertexai \
-f $BASEFOLDERPATH/apps/vertexai/vertexai-chart/values/values-docai.yaml
#helm uninstall vertexai-chart-documentai -n vertexai

Deploy vertexai gateway
==========================
k apply -f $BASEFOLDERPATH/manifests/vertexai/vertexai-gateway.yaml -n vertexai
#k delete -f $BASEFOLDERPATH/manifests/vertexai/vertexai-gateway.yaml -n vertexai
==================================================================================================
GCP Https LB
===============================================================================================================
gcloud compute addresses create $IP_ADDRESS_NAME --ip-version=IPV4 --global
gcloud compute addresses describe $IP_ADDRESS_NAME --format="get(address)" --global
#gcloud compute addresses delete $IP_ADDRESS_NAME --global

gcloud compute health-checks create http glb-asm-hc --port=80 --request-path="/healthz/ready"
#gcloud compute health-checks delete glb-asm-hc

gcloud compute backend-services create glb-asm-backend --load-balancing-scheme=EXTERNAL_MANAGED \
--protocol=HTTP --health-checks=glb-asm-hc --global
#gcloud compute backend-services delete glb-nginx-backend --global

gcloud compute backend-services add-backend glb-asm-backend \
--network-endpoint-group=ingress-asm-80-neg --network-endpoint-group-zone=$REGION-a --balancing-mode=RATE \
--max-rate-per-endpoint=80 --global

gcloud compute backend-services add-backend glb-asm-backend \
--network-endpoint-group=ingress-asm-80-neg --network-endpoint-group-zone=$REGION-b --balancing-mode=RATE \
--max-rate-per-endpoint=80 --global

gcloud compute backend-services add-backend glb-asm-backend \
--network-endpoint-group=ingress-asm-80-neg --network-endpoint-group-zone=$REGION-c --balancing-mode=RATE \
--max-rate-per-endpoint=80 --global

#gcloud compute backend-services remove-backend glb-nginx-backend \
--network-endpoint-group=ingress-asm-80-neg --network-endpoint-group-zone=$REGION-a --global
#gcloud compute backend-services remove-backend glb-nginx-backend \
--network-endpoint-group=ingress-asm-80-neg --network-endpoint-group-zone=$REGION-b --global
#gcloud compute backend-services remove-backend glb-nginx-backend \
--network-endpoint-group=ingress-asm-80-neg --network-endpoint-group-zone=$REGION-c --global

gcloud compute url-maps create glb-url-map --default-service=glb-asm-backend --global
gcloud compute url-maps add-path-matcher glb-url-map --path-matcher-name=all-paths \
--default-service=glb-asm-backend --backend-service-path-rules="/*=glb-asm-backend" \
--new-hosts="apps.gcpwkshpdev.com,bots.gcpwkshpdev.com"
gcloud compute url-maps describe glb-url-map --format=yaml
#gcloud compute url-maps delete glb-url-map --global

gcloud compute target-https-proxies create glb-https-proxy --url-map=glb-url-map \
--ssl-certificates=$CERTIFICATE_NAME --global
#gcloud compute target-https-proxies delete glb-https-proxy --global

gcloud compute forwarding-rules create glb-fwd-rule \
  --load-balancing-scheme=EXTERNAL_MANAGED \
  --network-tier=PREMIUM \
  --address=$IP_ADDRESS_NAME \
  --target-https-proxy=glb-https-proxy \
  --ports=443 --global
#gcloud compute forwarding-rules delete glb-fwd-rule  --global
========================================================================================================
#Unistall CSM
==========================

gcloud container fleet mesh update --management manual --memberships $CLUSTER \
--project $PROJECT_ID --location $REGION

kubectl get namespace --show-labels
kubectl label namespace smoke istio-injection-
kubectl label namespace vertexai istio-injection-
kubectl label namespace asm-ingress istio-injection-

kubectl delete controlplanerevision asm-managed asm-managed-rapid asm-managed-stable \
-n istio-system --ignore-not-found=true
kubectl delete validatingwebhookconfiguration istiod-istio-system-mcp
kubectl delete mutatingwebhookconfiguration istiod-asm-managed

k rollout restart deploy apacheapp-deploy -n smoke
k rollout restart deploy -n asm-ingress

kubectl delete namespace istio-system asm-system --ignore-not-found=true
gcloud container hub mesh disable --fleet-default-member-config --project $PROJECT_ID